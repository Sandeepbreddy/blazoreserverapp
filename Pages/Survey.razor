@page "/"

<PageTitle>Survey</PageTitle>

@using survey_proj.Data
@inject ISurveyService SurveyService

@if (surveys == null && surveys == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div>
    <h3 class="bg-color-height">My Active Surveys</h3>
    <stong>@OperatorInfo</stong>
    <Table Items="activeSurveys">
        <Columns>
            <Column Name="survey_title" Label="Survey Name"></Column>
            <Column Name="capi_stop_date" Label="Due Date"></Column>
            <Column Name="status" Label="Status"></Column>
        </Columns>
    </Table>
</div>
    <div>
        <h3 class="bg-color-height">My Upcoming Surveys</h3>
        <Table Items="upcomingSurveys">
            <Columns>
                <Column Name="survey_title" Label="Survey Name"></Column>
                <Column Name="capi_stop_date" Label="Due Date"></Column>
                <Column Name="status" Label="Status"></Column>
            </Columns>
        </Table>
    </div>
    <div>
        <h3 class="bg-color-height">My Past Surveys</h3>
        <Table Items="pastSurveys">
            <Columns>
                <Column Name="survey_title" Label="Survey Name"></Column>
                <Column Name="capi_stop_date" Label="Due Date"></Column>
                <Column Name="status" Label="Status"></Column>
            </Columns>
        </Table>
    </div>
}

@code {

    [Parameter]
    public string? OperatorInfo { get; set; }
    private List<SurveyDetails> surveys;

    private List<SurveyDetails> activeSurveys;
    private List<SurveyDetails> upcomingSurveys;
    private List<SurveyDetails> pastSurveys;

    protected override async Task OnInitializedAsync()
    {
        surveys = await SurveyService.GetSurveyDetailsAsync();

        activeSurveys = surveys.Where(x => DateTime.Parse(x.survey_date) < DateTime.Now
        && DateTime.Parse(x.due_date) > DateTime.Now).ToList();

        upcomingSurveys = surveys.Where(x => DateTime.Parse(x.survey_date) > DateTime.Now
        && DateTime.Parse(x.due_date) > DateTime.Parse(x.survey_date)).ToList();

        pastSurveys = surveys.Where(x => DateTime.Parse(x.survey_date) < DateTime.Now
        && DateTime.Parse(x.due_date) < DateTime.Now).ToList();
    }
}
